install.packages("RODBC")
mycon<-odbcDriverConnect('driver={SQL Server};server=SESQLSRV08;database=TobiiProLab_UsageStats;trusted_connection=true')
library(RODBC)
mycon<-odbcDriverConnect('driver={SQL Server};server=SESQLSRV08;database=TobiiProLab_UsageStats;trusted_connection=true')
library(DBI)
con <- dbConnect(odbc::odbc(), .connection_string = "Driver={SQL Server};", timeout = 10)
?dbConnect
con <- dbConnect(odbc::odbc(),
server = "SESQLSRV08",
database = "TobiiProLab_UsageStats",
uid = "ml1719@tobii.com",
pwd = "maria_the_1st_wife",
.connection_string = "Driver={SQL Server};", timeout = 10)
con <- dbConnect(odbc::odbc(),
server = "SESQLSRV08",
database = "TobiiProLab_UsageStats",
uid = "ml1719",
pwd = "maria_the_1st_wife",
.connection_string = "Driver={SQL Server};", timeout = 10)
install.packages("RMySQL")
con <- dbConnect(RMySQL::MySQL(),
server = "SESQLSRV08",
database = "TobiiProLab_UsageStats",
uid = "ml1719",
pwd = "maria_the_1st_wife",
.connection_string = "Driver={SQL Server};", timeout = 10)
con <- dbConnect(odbc::odbc(),
.connection_string = 'driver={SQL Server};server="SESQLSRV08";database="TobiiProLab_UsageStats";trusted_connection=true')
con <- dbConnect(odbc::odbc(), "UsageState_ProLab", database = "TobiiProLab_UsageStats")
con <- dbConnect(odbc::odbc(), "UsageState_ProLab", database = "TobiiProLab_UsageStats")
con <- dbConnect(odbc::odbc(), "UsageState_ProLab", database = "TobiiProLab_UsageStats")
library(DBI)
con <- dbConnect(odbc::odbc(), "UsageState_ProLab", database = "TobiiProLab_UsageStats")
for(value in 1:5){
print(
value
)
}
x <-
rep(8,88)
length(x)
x
calculate_subsidy <- function(n, d, l, min_efficiency, subsidy_factor) {
efficiency = n*d/l
if(efficiency < min_efficiency) {
return
(0)
}
efficiency * subsidy_factor
}
subsidy = calculate_subsidy(4, 75, 11, 25, 0.20)
cat("Subsidy $:", subsidy)
subsidy = calculate_subsidy(2, 60, 10.5, 25, 0.20)
cat("Subsidy $:", subsidy)
subsidy = calculate_subsidy(4, 75, 11, 25, 0.20)
cat("Subsidy $:", subsidy)
subsidy = calculate_subsidy(2, 60, 10.5, 25, 0.20)
cat("Subsidy $:", subsidy)
numbers <- list(
x = c(1, 2, 3),
y = c('one', 'two', 'three'),
z = c('uno', 'dos', 'tres')
)
names
(numbers)
numbers <- list(
x = c(1, 2, 3),
y = c('one', 'two', 'three'),
z = c('uno', 'dos', 'tres')
)
ls
(numbers)
as.numeric
('50') + 20
as.numeric('50') + 20
x <- list(
b = c('uno', 'dos', 'tres')
)
append(x, a = 1:3)
x
append(x, a = 1:3)
x<- list(x, a = 1:3)
x
range <- function(x) {
if(
!is.numeric(x)
){
return(paste("This function accepts a numeric input.",
"You have provided an input of class:", class(x)[1]))
}
max(x) - min(x)
}
range(c(TRUE, FALSE, TRUE, FALSE, TRUE))
v <- c(0, 0, 1, 1)
TRUE
(v)
v <- c(0, 0, 1, 1)
TRUE(v)
zero(v)
mtcars %>%
lm(mpg ~ wt, data =
.x
) %>%
coef()
library(tidyverse)
mtcars %>%
lm(mpg ~ wt, data =
.x
) %>%
coef()
mtcars %>%
lm(mpg ~ wt, data =
.
) %>%
coef()
vectors <- list(
A = c(9, 1, NA, 4, 3),
B = c(7,  NA,  4,  4,  1,  NA, 10,  8)
)
map
(vectors,
mean
,
na.rm = TRUE
)
set.seed(42)
samples <-
rpois(20, 2)
samples
anova_one_way <-
aov
(
duration~genre
, data = movies)
summary(anova_one_way)
my_sample <-
rnorm(100, 2.5, 1)
cat("Sample size: ", length(my_sample), " Sample mean: ", mean(my_sample), " Sample SD: ", sd(my_sample))
ggplot(wine,
aes(quality, pH)
) +
geom_violin()
+
labs(x = "quality",
y = "pH"
)
ggplot(wine,  aes(quality, pH) +
geom_violin()+
labs(x = "quality",
y = "pH"
)
norm <-
rnorm(150, 33, 3)
cat("Sample size: ", length(norm), " Sample mean: ", mean(norm), " Sample SD: ", sd(norm))
pnorm(
180
, mean = 170, sd = 10)
-
pnorm(
160
, mean = 170, sd = 10)
pnorm(
160
, mean = 170, sd = 10)
-
pnorm(
180
, mean = 170, sd = 10)
?geom_histogram
set.seed(42)
arrival <-
rpois(20,2)
arrival
set.seed(42)
heart_sample <- heart %>%
sample_n(10)
heart_sample
library(pwr)
results <-
pwr.t.test
(n = NULL,
d = 0.50,
sig.level = 0.05,
power = 0.80,
alternative = 'two.sided')
results$n
install.packages("pwr")
results$n
results <-  pwr.t.test(n = NULL,
d = 0.50,
sig.level = 0.05,
power = 0.80,
alternative = 'two.sided')
library(pwr)
results <-  pwr.t.test(n = NULL,
d = 0.50,
sig.level = 0.05,
power = 0.80,
alternative = 'two.sided')
results$n
tinytex::install_tinytex()
?bibliography_entries
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog.bib")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog2.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog2.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog2.bib")
library(dplyr)
#knitr::write_bib(c("vitae", "tibble"), "packages.bib")
bibliography_entries("lindskog2.bib") %>%
arrange(desc(issued), desc(author$family))
colourpicker:::colourPickerAddin()
colourpicker:::colourPickerAddin()
c("#151BC2", "#FFFFFF", "#FFFFFF")
install.packages("styler")
reprex:::reprex_addin()
devtools:::test_active_file()
library(DBI)
con <- dbConnect(odbc::odbc(), "UsageStat_ProLab", database = "TobiiProLab_UsageStats")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(tibble)
tribble(
~ Degree, ~ Year, ~ Institution, ~ Where,
"Docent", "2017", "Uppsala University", "Uppsala, Sweden",
"Ph.D. Cognitive psychology", "2014",  "Uppsala University", "Uppsala, Sweden",
"Fil. lic. Psychology","2012",  "Uppsala University", "Uppsala, Sweden",
"MSSc. Educational studies", "2009", "Stockholm University", "Stockholm, Sweden",
"BSocSc. Psychology", "2009", "Uppsala University", "Uppsala, Sweden",
"University Diploma Mathematics", "2009", "Uppsala University", "Uppsala, Sweden") %>%
detailed_entries(Degree, Year, Institution, Where)
x <- rep(A, B, each = 200)
library(tidyverse)
df <- tibble(x = rep("A", "B", each = 200), y =rnorm(400))
df <- tibble(x = rep(c("A", "B"), each = 200), y =rnorm(400))
ggplot(df, aes(x=factor(x) , y = y)) + geom_point()
ggplot(df, aes(x=factor(x) , y = y)) + geom_jitter()
ggplot(df, aes(x=factor(x) , y = y)) + geom_jitter(width = .3)
ggplot(df, aes(x=factor(x) , y = y)) + geom_jitter(width = .2)
ggplot(df, aes(x=factor(x) , y = y)) + geom_jitter(width = .1)
setwd("~/repos/Coding-challenges/pling_plang_plong")
3%3
3%%3
if(num%%5){resp_check[2] <- TRUE}
pling_plang_plong <- function(num){
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3){resp_check[1] <- TRUE}
if(num%%5){resp_check[2] <- TRUE}
if(num%%7){resp_check[3] <- TRUE}
if(sum(resp_check) == 0){
return(num)
}else{
return(past(resp_text[resp_check], sep = ""))
}
}
##Checks
pling_plang_plong(3)
pling_plang_plong <- function(num){
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3){resp_check[1] <- TRUE}
if(num%%5){resp_check[2] <- TRUE}
if(num%%7){resp_check[3] <- TRUE}
if(sum(resp_check) == 0){
return(num)
}else{
return(paste(resp_text[resp_check], sep = ""))
}
}
##Checks
pling_plang_plong(3)
pling_plang_plong <- function(num){
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3 == 0){resp_check[1] <- TRUE}
if(num%%5== 0){resp_check[2] <- TRUE}
if(num%%7== 0){resp_check[3] <- TRUE}
if(sum(resp_check) == 0){
return(num)
}else{
return(paste(resp_text[resp_check], sep = ""))
}
}
##Checks
pling_plang_plong(3)
##Checks
pling_plang_plong(3)
pling_plang_plong(5)
pling_plang_plong(7)
pling_plang_plong(15)
num <- 35
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3 == 0){resp_check[1] <- TRUE}
if(num%%5== 0){resp_check[2] <- TRUE}
if(num%%7== 0){resp_check[3] <- TRUE}
paste(resp_text[resp_check], sep = "")
x <- paste(resp_text[resp_check], sep = "")
paste(resp_text[resp_check], sep = "", collapse = TRUE)
paste(resp_text[resp_check], sep = "", collapse = "")
pling_plang_plong <- function(num){
num <- 35
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3 == 0){resp_check[1] <- TRUE}
if(num%%5== 0){resp_check[2] <- TRUE}
if(num%%7== 0){resp_check[3] <- TRUE}
if(sum(resp_check) == 0){
return(num)
}else{
return(paste(resp_text[resp_check], sep = "", collapse = "TRUE"))
}
}
##Checks
pling_plang_plong(3)
pling_plang_plong(5)
pling_plang_plong <- function(num){
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3 == 0){resp_check[1] <- TRUE}
if(num%%5== 0){resp_check[2] <- TRUE}
if(num%%7== 0){resp_check[3] <- TRUE}
if(sum(resp_check) == 0){
return(num)
}else{
return(paste(resp_text[resp_check], sep = "", collapse = "TRUE"))
}
}
##Checks
pling_plang_plong(3)
pling_plang_plong(5)
pling_plang_plong(7)
pling_plang_plong(15)
pling_plang_plong(35)
pling_plang_plong(68)
num <- 35
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3 == 0){resp_check[1] <- TRUE}
if(num%%5== 0){resp_check[2] <- TRUE}
if(num%%7== 0){resp_check[3] <- TRUE}
return(
paste(resp_text[resp_check], sep = "", collapse = "TRUE")
)
paste(resp_text[resp_check], sep = "", collapse = "TRUE")
resp_text[resp_check]
pling_plang_plong <- function(num){
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3 == 0){resp_check[1] <- TRUE}
if(num%%5== 0){resp_check[2] <- TRUE}
if(num%%7== 0){resp_check[3] <- TRUE}
if(sum(resp_check) == 0){
return(num)
}else{
return(paste(resp_text[resp_check], sep = "", collapse = ""))
}
}
##Checks
pling_plang_plong(3)
pling_plang_plong(5)
pling_plang_plong(7)
pling_plang_plong(15)
pling_plang_plong(35)
pling_plang_plong(68)
pling_plang_plong(105)
##Checks
pling_plang_plong(1)
raindrops(105)
raindrops <- function(num){
resp_text <- c("Pling", "Plang", "Plong")
resp_check <- c(FALSE, FALSE, FALSE)
if(num%%3 == 0){resp_check[1] <- TRUE}
if(num%%5== 0){resp_check[2] <- TRUE}
if(num%%7== 0){resp_check[3] <- TRUE}
if(sum(resp_check) == 0){
return(as.character(num))
}else{
return(paste(resp_text[resp_check], sep = "", collapse = ""))
}
}
##Checks
raindrops(1)
raindrops(3)
raindrops(5)
raindrops(7)
raindrops(15)
raindrops(35)
raindrops(68)
raindrops(105)
